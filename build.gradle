plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'com.github.johnrengelman.shadow' version '7.0.0' // id("com.github.johnrengelman.shadow") version "7.0.0"
}

group 'de.MarkusTieger'
version '1.11.2'

String env = System.getenv("build_number");
String commit = System.getenv("commit_hash");

if (env != null) {
    while (env.length() < 6) {
        env = "0" + env
    }
    System.out.println("::set-output name=build_number::" + env)
}

if (env == null) env = "-";
if (commit == null) commit = "-";

String fullVersion = this.getVersion()
if (!env.equalsIgnoreCase("-")) {
    fullVersion = fullVersion + "-" + env;
}
if (!commit.equalsIgnoreCase("-")) {
    fullVersion = fullVersion + "-" + commit;
}

System.out.println("::set-output name=release::" + getVersion())

String user = findProperty("github.username")
if (user == null) user = System.getenv("gituser")
String pwd = findProperty("github.token")
if (pwd == null) pwd = System.getenv("gitpwd")

repositories {
    mavenCentral()
    // mavenLocal()
    maven {
        name = "Github"
        url = uri("https://maven.pkg.github.com/TigerSystems/tigxa-api")
        credentials {
            username = user
            password = pwd
        }
    }
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'de.MarkusTieger.Tigxa'
    mainClass = 'de.MarkusTieger.Tigxa.Bootstrap'
}

javafx {
    version = '17'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing']
}

jar {
    manifest {
        attributes 'Name': 'de/markustieger/tigxa/'
        attributes 'Specification-Title': "Tigxa"
        attributes 'Specification-Version': getVersion()
        attributes 'Specification-Vendor': "TigerSystems"
        attributes 'Implementation-Title': commit
        attributes 'Implementation-Version': env
        attributes 'Implementation-Vendor': "MarkusTieger"
    }
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.5.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")


    // My Depends

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation('com.formdev:flatlaf:2.1')
    implementation('com.formdev:flatlaf-extras:2.1')
    implementation('com.formdev:flatlaf-intellij-themes:2.1')

    implementation("com.google.code.gson:gson:2.9.0")

    implementation('com.yubico:yubico-validation-client2:3.1.0')

    implementation("net.sf.sociaal:freetts:1.2.2")


    implementation('de.MarkusTieger:tigxa-events:1.+')
    implementation('de.MarkusTieger:tigxa-api:1.+')
}

test {
    useJUnitPlatform()
}
